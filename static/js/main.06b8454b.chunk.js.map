{"version":3,"sources":["Components/Fullpage.js","Sections/TitleSections.js","Sections/AboutSection.js","Components/SkillCard.js","Sections/SkillsSection.js","Components/Scroll.js","Components/ColorPalette.js","App.js","serviceWorker.js","index.js"],"names":["Fullpage","children","this","props","className","style","background","Component","TitleSections","color","Data","title","subtitle","Object","keys","links","map","key","url","activeClass","to","spy","smooth","offset","duration","delay","href","id","src","down","image","AboutSection","sections","items","content","content2","content3","content4","SkillCard","skill","alt","SkillsSection","eachSkill","up","margin","Scroll","pos","ColorPalette","cp","App","changeColor","rang","zamine","state","counter","setState","color_first","color_second","color_third","background_first","background_second","background_third","name","onClick","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.06b8454b.chunk.js","sourcesContent":["// eslint-disable-next-line no-unused-vars\r\nimport React, {Component} from \"react\";\r\nimport './Fullpage.css'\r\nclass Fullpage extends Component{\r\n    render() {\r\n        const { children } = this.props\r\n        return(\r\n            <div className={`fullpage ${this.props.className} || '' ` } style={{background:this.props.background}}>\r\n                {children}\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Fullpage;","import React, {Component} from \"react\";\r\nimport Fullpage from \"../Components/Fullpage\";\r\nimport Data from \"../Data.json\";\r\nimport {SocialIcon} from \"react-social-icons\";\r\nimport \"./TitleSections.css\"\r\nimport {Link} from \"react-scroll\";\r\n\r\n\r\nclass TitleSections extends Component{\r\n    render() {\r\n        return(\r\n            <Fullpage className=\"first\" background={this.props.background}>\r\n                <h3 className=\"title\" style={{ color: this.props.color }}>{Data.title}</h3>\r\n                <div>\r\n                    <h2 style={{ color: this.props.color }}>{Data.subtitle}</h2>\r\n                </div>\r\n                <div className=\"icons-wrapper\">\r\n                    {\r\n                        Object.keys(Data.links).map(key => {\r\n                            return (\r\n                                <div className=\"icon\">\r\n                                    <SocialIcon url={Data.links[key]}/>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n\r\n                </div>\r\n                <div>\r\n                    <Link activeClass=\"active\" to=\"About\" spy={true} smooth={true} offset={0} duration={500} delay={0}>\r\n                        <a href={\"\"}><img id=\"Title\" src={Data.down.image}/></a>\r\n                    </Link>\r\n\r\n                </div>\r\n            </Fullpage>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default TitleSections;","import React, {Component} from \"react\";\r\nimport Fullpage from \"../Components/Fullpage\";\r\nimport Data from \"../Data.json\";\r\nimport \"./AboutSection.css\"\r\nimport {Link} from \"react-scroll\";\r\n\r\nclass AboutSection extends Component{\r\n    render() {\r\n        return(\r\n            <Fullpage className=\"second\" background={this.props.background}>\r\n                <h3 style={{ color: this.props.color }}>{Data.sections[0].title}</h3>\r\n                <p style={{ color: this.props.color }}>{Data.sections[0].items[0].content}</p>\r\n                <p style={{ color: this.props.color }}>{Data.sections[0].items[0].content2}</p>\r\n                <p style={{ color: this.props.color }}>{Data.sections[0].items[0].content3}</p>\r\n                <p style={{ color: this.props.color }}>{Data.sections[0].items[0].content4}</p>\r\n                <Link activeClass=\"active\" to=\"Skills\" spy={true} smooth={true} offset={0} duration={500} delay={0}>\r\n                    <a href={\"\"}><img id=\"About\" src={Data.down.image}/></a>\r\n                </Link>\r\n            </Fullpage>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default AboutSection;","\r\nimport React, {Component} from \"react\";\r\nimport './SkilllCard.css'\r\n\r\nclass SkillCard extends Component{\r\n    render() {\r\n        const {skill} = this.props;\r\n        return(\r\n            <div className=\"card\" >\r\n                <div className=\"image\">\r\n                    <img src={skill.content.image} alt=\"img\"/>\r\n                </div>\r\n                <div className=\"skill-title-wrapper\">\r\n                    <h4>\r\n                        {skill.content.title}\r\n                    </h4>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default SkillCard;","import React, {Component} from \"react\";\r\nimport Fullpage from \"../Components/Fullpage\";\r\nimport Data from \"../Data.json\";\r\nimport SkillCard from \"../Components/SkillCard\";\r\nimport \"./SkillsSection.css\"\r\nimport {Link} from \"react-scroll\";\r\n\r\n\r\nclass SkillsSection extends Component{\r\n    render() {\r\n        return(\r\n            <Fullpage className=\"third\" background={this.props.background}>\r\n                <h3></h3>\r\n                <h3 style={{ color: this.props.color }}>{Data.sections[1].title}</h3>\r\n                <div className=\"cards-wrapper\">\r\n                    {\r\n                        Data.sections[1].items.map(eachSkill => {\r\n                            return (\r\n                                <SkillCard skill={eachSkill}/>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                <Link activeClass=\"active\" to=\"Top\" spy={true} smooth={true} offset={0} duration={500} delay={0}>\r\n                    <a href={\"\"}><img id=\"About\" src={Data.up.image} style={{margin:50}}/></a>\r\n                </Link>\r\n            </Fullpage>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default SkillsSection;","import React, {Component} from \"react\";\r\nimport {Link} from 'react-scroll';\r\n\r\n\r\nclass Scroll extends Component{\r\n    render() {\r\n        return(\r\n                <Link activeClass=\"active\" to={this.props.pos} spy={true} smooth={true} offset={0} duration={500} delay={0}>\r\n                    <a href={\"\"}><div>{this.props.pos}</div></a>\r\n                </Link>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Scroll;","\r\nimport React, {Component} from \"react\";\r\nimport Data from \"../Data.json\";\r\nimport \"./ColorPalette.css\"\r\n\r\n\r\nclass ColorPalette extends Component{\r\n    render() {\r\n        return(\r\n        <img id=\"CP\" src={Data.cp.image}/>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default ColorPalette;","import React, {Component} from 'react';\n\nimport TitleSections from \"./Sections/TitleSections\";\nimport AboutSection from \"./Sections/AboutSection\";\nimport SkillsSection from \"./Sections/SkillsSection\";\nimport {Element } from 'react-scroll';\nimport Scroll from \"./Components/Scroll\";\nimport ColorPalette from \"./Components/ColorPalette\";\nimport Snowfall from 'react-snowfall'\nimport './App.css';\nimport \"./Components/Navbar.css\"\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            color_first: \"#05480c\",\n            color_second:\"#104310\" ,\n            color_third:\"#250bb0\" ,\n            background_first: \"#ffffff\",\n            background_second: \"#5fca2e\",\n            background_third: \"#ada7cb\",\n            counter: 0\n        }\n    }\n    changeColor = () => {\n\n        let rang = [\"#f34471\", \"#0c69e3\", \"#8269e3\",\"#104310\"];\n        let zamine = [\"#461220\", \"#011f4b\", \"#251e3e\", \"#ffffff\",\"#5fca2e\"];\n        if (this.state.counter >= 3) {\n            this.setState({\n                counter: 0,\n                color_first: rang[this.state.counter],\n                color_second:rang[this.state.counter+1] ,\n                color_third: rang[this.state.counter+2] ,\n                background_first: zamine[this.state.counter],\n                background_second: zamine[this.state.counter+1],\n                background_third: zamine[this.state.counter+2],\n            });\n        } else\n            this.setState({\n                color_first: rang[this.state.counter],\n                color_second:rang[this.state.counter+1] ,\n                color_third: rang[this.state.counter+2] ,\n                background_first: zamine[this.state.counter],\n                background_second: zamine[this.state.counter+1],\n                background_third: zamine[this.state.counter+2],\n                counter: this.state.counter + 1\n            });\n    };\n    render() {\n        return (\n            <div className=\"App\">\n                <Element name=\"Top\" className=\"element\"/>\n                <div className=\"navbar\">\n                    <div><Scroll pos=\"About\"/></div>\n                    <div><Scroll pos=\"Skills\"/></div>\n                    <div onClick={this.changeColor}><ColorPalette/></div>\n                </div>\n                <Snowfall/>\n                <TitleSections color={this.state.color_first} background={this.state.background_first}/>\n                <Element name=\"About\" className=\"element\"/>\n                <AboutSection id={\"about\"} color={this.state.color_second} background={this.state.background_second}/>\n                <Element name=\"Skills\" className=\"element\"/>\n                <SkillsSection color={this.state.color_third} background={this.state.background_third}/>\n            </div>\n        );\n    }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}